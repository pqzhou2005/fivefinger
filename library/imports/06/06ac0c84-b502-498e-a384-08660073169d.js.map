{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\Finger.js"],"names":["cc","Class","extends","Component","properties","moveUpDuration","onLoad","console","log","node","start","update","dt","moveUp","finishAction","callFunc","dispatchEvent","Event","EventCustom","runAction","sequence","moveBy","v2","height","onCollisionEnter","other","self","world","aabb","preAabb","t","transform","r","radius","p","position","ps","points","onCollisionStay","onCollisionExit"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;;AAERC,wBAAgB;AAFR,KAHP;;AAQL;;AAEAC,UAVK,oBAUK;AACN;AACAC,gBAAQC,GAAR,CAAY,eAAZ;AACAD,gBAAQC,GAAR,CAAY,KAAKC,IAAjB;AACH,KAdI;AAgBLC,SAhBK,mBAgBI,CAER,CAlBI;AAoBLC,UApBK,kBAoBGC,EApBH,EAoBO,CAEX,CAtBI;;;AAwBLC,YAAQ,kBAAW;;AAEf;AACA,YAAIC,eAAed,GAAGe,QAAH,CAAY,YAAY;AACvC,iBAAKN,IAAL,CAAUO,aAAV,CAAyB,IAAIhB,GAAGiB,KAAH,CAASC,WAAb,CAAyB,aAAzB,EAAwC,IAAxC,CAAzB;AACH,SAFkB,EAEjB,IAFiB,CAAnB;;AAIA,aAAKT,IAAL,CAAUU,SAAV,CAAoBnB,GAAGoB,QAAH,CAAY,IAAIpB,GAAGqB,MAAP,CAAc,KAAKhB,cAAnB,EAAmCL,GAAGsB,EAAH,CAAM,CAAN,EAAS,KAAKb,IAAL,CAAUc,MAAnB,CAAnC,CAAZ,EAA2ET,YAA3E,CAApB;AACH,KAhCI;;AAkCL;;;;;AAKAU,sBAAkB,0BAAUC,KAAV,EAAiBC,IAAjB,EAAuB;AACrCnB,gBAAQC,GAAR,CAAY,oBAAZ;AACA;AACA;AACA,YAAImB,QAAQD,KAAKC,KAAjB;;AAEA;AACA,YAAIC,OAAOD,MAAMC,IAAjB;;AAEA;AACA,YAAIC,UAAUF,MAAME,OAApB;;AAEA;AACA,YAAIC,IAAIH,MAAMI,SAAd;;AAEA;AACA,YAAIC,IAAIL,MAAMM,MAAd;AACA,YAAIC,IAAIP,MAAMQ,QAAd;;AAEA;AACA,YAAIC,KAAKT,MAAMU,MAAf;AACH,KA5DI;AA6DL;;;;;AAKAC,qBAAiB,yBAAUb,KAAV,EAAiBC,IAAjB,EAAuB;AACpC;AACH,KApEI;AAqEL;;;;;AAKAa,qBAAiB,yBAAUd,KAAV,EAAiBC,IAAjB,EAAuB;AACpC;AACH;AA5EI,CAAT","file":"Finger.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        \r\n        moveUpDuration: 2,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        // this.currentLength = 0;\r\n        console.log(\"XXXXXXXXXXXXX\");\r\n        console.log(this.node);\r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    update (dt) {\r\n        \r\n    },\r\n\r\n    moveUp: function() {\r\n\r\n        //移动结束\r\n        var finishAction = cc.callFunc(function () {\r\n            this.node.dispatchEvent( new cc.Event.EventCustom('fingerReady', true));\r\n        },this);\r\n\r\n        this.node.runAction(cc.sequence(new cc.moveBy(this.moveUpDuration, cc.v2(0, this.node.height)),finishAction));    \r\n    },\r\n\r\n    /**\r\n     * 当碰撞产生的时候调用\r\n     * @param  {Collider} other 产生碰撞的另一个碰撞组件\r\n     * @param  {Collider} self  产生碰撞的自身的碰撞组件\r\n     */\r\n    onCollisionEnter: function (other, self) {\r\n        console.log('on collision enter');\r\n        // this.node.stopAllActions();\r\n        // 碰撞系统会计算出碰撞组件在世界坐标系下的相关的值，并放到 world 这个属性里面\r\n        var world = self.world;\r\n\r\n        // 碰撞组件的 aabb 碰撞框\r\n        var aabb = world.aabb;\r\n\r\n        // 节点碰撞前上一帧 aabb 碰撞框的位置\r\n        var preAabb = world.preAabb;\r\n\r\n        // 碰撞框的世界矩阵\r\n        var t = world.transform;\r\n\r\n        // 以下属性为圆形碰撞组件特有属性\r\n        var r = world.radius;\r\n        var p = world.position;\r\n\r\n        // 以下属性为 矩形 和 多边形 碰撞组件特有属性\r\n        var ps = world.points;\r\n    },\r\n    /**\r\n     * 当碰撞产生后，碰撞结束前的情况下，每次计算碰撞结果后调用\r\n     * @param  {Collider} other 产生碰撞的另一个碰撞组件\r\n     * @param  {Collider} self  产生碰撞的自身的碰撞组件\r\n     */\r\n    onCollisionStay: function (other, self) {\r\n        // console.log('on collision stay');\r\n    },\r\n    /**\r\n     * 当碰撞结束后调用\r\n     * @param  {Collider} other 产生碰撞的另一个碰撞组件\r\n     * @param  {Collider} self  产生碰撞的自身的碰撞组件\r\n     */\r\n    onCollisionExit: function (other, self) {\r\n        // console.log('on collision exit');\r\n    },\r\n});\r\n"]}